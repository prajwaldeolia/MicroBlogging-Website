// <auto-generated />
using Blogging.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blogging.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20220622132533_removed unused tabel")]
    partial class removedunusedtabel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blogging.Models.SignInModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.ToTable("signin");
                });

            modelBuilder.Entity("Blogging.Models.TweetModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tweet")
                        .HasColumnType("nvarchar(240)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("tweet");
                });
#pragma warning restore 612, 618
        }
    }
}
